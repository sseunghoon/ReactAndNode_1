mongoDB URI 같이 GitHub에 올라가면 안되는 소스들은 따로 모아두고
.gitignore에 등록해서 안 올라가게 만듬

(heroku에?) 배포하면 mongoDB URI를 소스코드에서 입력하는게 아니고 
heroku에 입력해야 되서 develop version과 production version을 따로 관리
==>dev.js와 prod.js로 구분 

auth기능이란?(Authentication)
글쓰기나 페이지 조회를 할 수 있는 권한이 있는 사람인지 계속 체크하는 것
원리)
Cookie에 저장된 Token은 userID + JWT 가 인코딩 된 것
그래서 역으로 Token - JWT 복호화를 해서 Server의 userID와 계속 비교

React에 대해서
1. Library 중 하나
2. module과 비슷하게 컴포넌트로 이뤄져 있어서 재사용성이 뛰어남.
3. Virtual DOM

========================================================
========================================================
========================================================

<용어 정리>
callback function이란?
다른 함수에 전달되며, 이는 외부 함수 내에서 일종의 루틴 또는 동장을 완성하기 위해 호출된다.
////////////////////
funcion greeting(name){
	alert('반갑습니다. ' + name);
}
function processUserInput(callback){
	var name = prompt('이름을 입력해 주세요.');
	callback(name);
}
processUserInput(greeting);
////////////////////

========================================================
========================================================
========================================================

<기타 터미널 명령어>

goorm [filename]
goorm ide에서 파일을 열라는 명령어

========================================================
========================================================
========================================================

<npm>

npm = Node Package Manager

1. npm init
package.json 만들기

2. npm install express --save
express 설치 --save는 package.json에 기록저장

3. npm run start
start는 package.json의 scripts에 node index.js 라고 저장한 것
run은 script를 실행하라는 뜻인듯

4. npm install mongoose --save
mongoDB 툴 다운로드


5. npm install body-parser --save
body-parser를 통해 Client가 Server로 보내는 Request
(JSON, buffer, string, and URL encoded data)들을 받을 수 가 있음
+Client에서 request를 줘야 하는데 현재 Client가 없으니 POSTMAN을 이용해서 request를 보냄

6. npm install nodemnon --save-dev
서버를 재시작하지 않더라도 수정내용이 deploy될 수 있도록 하는 툴
-dev를 붙이는 이유는 develop mode 즉 로컬에서만 돌리도록 설정하는 것이다.
근데 그러면 online ide에서는 어떻게 될까??
=>online ide를 로컬로 인식하는지 수정사항이 실시간 deploy된다
+)package.json에서 node index.js 말고 nodemon index.js로 따로 script를 만든 후 run 했음

7. npm install bcrypt --save
비밀번호 암호화 라이브러리

8. npm install jsonwebtoken --save
로그인한 사용자에게 토큰을 주기 위한 라이브러리

9. npm install cookie-parser --save
사용자 토큰을 쿠키에 저장하기 위한 라이브러리

10. npx create-react-app .
react app 다운로드

11. npm vs npx
npm install 하면 다 로컬, node_modules에 다운받아지고 package.json에 기록을 했는데
npm install -g 를 쓰면 global, windows면 /bin에 다운 받아짐 (컴퓨터에 받아짐)
(근데 지금까지 로컬이 개인컴퓨터를 말하는 줄 알았는데 아니였나 봄)
어쨌든 원래는 npm install -g create-react-app을 썼는데 (global 디렉토리에 다운)
npx를 이용하면 create-react-app을 이용할 수 있다
(설명을 들어보니 로컬은 개인 컴퓨터 안에 있는 git 저장소를 말하는 것 같음)
(local의 반댓말은 remote 인가?)
npx이 npm registry에서 create-react-app을 찾아서 다운로드 없이 실행 시켜준다고 한다.
덕분에
1. Disk Space를 낭비하지 않을 수 있다.
2. 항상 최신 버전을 사용할 수 있다.
==> 나중에 이해할 수 있을 듯. 지금은 걍 넘어가


========================================================
========================================================
========================================================

<Git>

git init
git 저장소 생성

git status
commit 대기파일 체크

.gitignore 파일 생성 후 폴더명 적으면 git add에 반영 안 됨

git add
commit 리스트에 올린다는 뜻

git commit -m 'message'
커밋과 함께 커밋 메세지 작성

git push

git rm --cached node_modules
git add에 반영된 node_modules 폴더를 제거해 달라는 뜻

ush 123